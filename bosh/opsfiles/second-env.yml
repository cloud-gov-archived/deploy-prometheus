# Add tooling prometheus
- type: replace
  path: /instance_groups/-
  value:
    name: prometheus-((2ndenv))
    instances: 1
    vm_type: ((environment))-prometheus-large
    persistent_disk_type: ((environment))-prometheus-large
    stemcell: default
    azs: ((azs))
    networks:
    - name: ((environment))-monitoring
    env:
      persistent_disk_fs: xfs
    jobs:
    - name: prometheus2
      release: prometheus
      properties:
        prometheus:
          external_labels:
            federate: prometheus-tooling
          scrape_configs:
          - job_name: prometheus
            static_configs:
            - targets:
              - localhost:9090
          - job_name: bosh
            scrape_interval: 1m
            scrape_timeout: 1m
            static_configs:
            - targets:
              - localhost:9190
          - job_name: concourse
            file_sd_configs:
            - files:
              - /var/vcap/store/bosh_exporter/bosh_target_groups.json
            relabel_configs:
            - source_labels: [__meta_bosh_job_process_name]
              regex: atc
              action: keep
            - source_labels: [__address__]
              regex: "(.*)"
              target_label: __address__
              replacement: "${1}:9110"
            - source_labels: [__meta_bosh_deployment]
              regex: "(.*)"
              target_label: bosh_deployment
              replacement: "$1"
          - job_name: node
            file_sd_configs:
            - files:
              - /var/vcap/store/bosh_exporter/bosh_target_groups.json
            relabel_configs:
            - source_labels: [__meta_bosh_job_process_name]
              regex: node_exporter
              action: keep
            - source_labels: [__address__]
              regex: "(.*)"
              target_label: __address__
              replacement: "${1}:9100"
    - name: bosh_exporter
      release: prometheus
      properties:
        bosh_exporter:
          bosh:
            url: ((bosh2-url))
            ca_cert: ((bosh2-ca-cert))
            uaa:
              url: ((bosh2-url)):8443
              client_id: ((bosh2-client-id))
              client_secret: ((bosh2-client-secret))
          metrics:
            environment: ((2ndenv))
    - name: cf_exporter
      release: prometheus
      properties:
        cf_exporter:
          cf:
            api_url: https://api.((2nddomain))
            client_id: ((cf-exporter2-client-id))
            client_secret: ((cf-exporter2-client-secret))
            deployment_name: cf-((environment))
          metrics:
            environment: ((environment))
    - name: firehose_exporter
      release: prometheus
      properties:
        firehose_exporter:
          uaa:
            url: https://login.((2nddomain))
            client_id: ((firehose2-client-id))
            client_secret: ((firehose2-client-secret))
          doppler:
            subscription_id: prometheus
          metrics:
            environment: ((environment))
          logging:
            url: wss://doppler.((2nddomain)):443
            use_legacy_firehose: true

# Scrape 2ndenv prometheus via federation
- type: replace
  path: /instance_groups/name=prometheus/jobs/name=prometheus2/properties/prometheus/scrape_configs/-
  value:
    job_name: federate2
    honor_labels: true
    metrics_path: /federate2
    params:
      match[]:
      - '{__name__=~"bosh_.*"}'
      - '{__name__=~"node_.*"}'
      - '{__name__=~"nessus_.*"}'
      - '{__name__=~"concourse.*"}'
    static_configs:
    - targets:
      #- prometheus-((2ndenv)).service.cf.internal:9090
      - prometheus-((2ndenv)).production-monitoring.prometheus-production.bosh

# instance types.
- type: replace
  path: /instance_groups/name=prometheus-((2ndenv))/vm_type
  value: m5.large
